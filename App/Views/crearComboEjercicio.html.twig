<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Crear Ejercicio</title>
    <link rel="stylesheet" href="../../Public/css/formEjercicio.css">
    <link rel="stylesheet" href="../../Public/css/style.css">
</head>
<body>
<div class="crearEjercicio-Container">
    <div id="formulario-crear-ejercicio" class="content oculto">
        <form id="crear-ejercicio-form" action="/crearComboEjercicio" method="post" class="califidepo">
            <label for="nombre-combo">Nombre del Combo:</label>
            <input type="text" id="nombre-combo" name="nombreCombo" required><br><br>
            <div id="ejercicios-seleccionados">
                <!-- Aquí se irán agregando los selects y los detalles correspondientes -->
            </div>
            <button type="button" id="agregar-ejercicio">Añadir otro ejercicio</button><br><br>
            <input type="hidden" name="ejercicios" id="ejercicios-input">
            <input type="submit" value="Enviar">
        </form>
    </div>

<div id="ejercicios-lista" class="ejercicios-lista">
    <h2>Lista de Ejercicios</h2>
    <ul id="lista-ejercicios"></ul>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const ejerciciosSeleccionados = [];

        // Realizar la petición a la API para obtener los ejercicios
        fetch('/ejercicios')
            .then(response => response.json())
            .then(data => {
                const listaEjercicios = document.getElementById('lista-ejercicios');

                data.forEach(ejercicio => {
                    const listItem = document.createElement('li');
                    listItem.textContent = `Nombre: ${ejercicio.nombre}, Descripción: ${ejercicio.descripcion}, Grupo Muscular: ${ejercicio.grupoMuscular}, Tipo de Ejercicio: ${ejercicio.tipoEjercicio}`;
                    listaEjercicios.appendChild(listItem);
                });

                // Manejar el botón para agregar más ejercicios
                const agregarEjercicioBtn = document.getElementById('agregar-ejercicio');
                agregarEjercicioBtn.addEventListener('click', function () {
                    agregarNuevoEjercicio(data);
                });

                // Agregar el primer select automáticamente
                agregarNuevoEjercicio(data);
            })
            .catch(error => {
                console.error('Error al obtener los ejercicios:', error);
            });

        function agregarNuevoEjercicio(data) {
            const ejerciciosSeleccionadosDiv = document.getElementById('ejercicios-seleccionados');

            // Crear un nuevo contenedor para el select y sus detalles
            const contenedorEjercicio = document.createElement('div');
            contenedorEjercicio.classList.add('ejercicio-contenedor');

            // Crear un nuevo select
            const nuevoSelect = document.createElement('select');
            nuevoSelect.required = true;
            nuevoSelect.innerHTML = '<option value="" disabled selected>Seleccione un ejercicio</option>';

            // Llenar el select con las opciones de ejercicios
            data.forEach(ejercicio => {
                // Verificar si el ejercicio ya ha sido seleccionado
                if (!ejerciciosSeleccionados.some(e => e.idEjercicio === ejercicio.idEjercicio)) {
                    const option = document.createElement('option');
                    option.value = JSON.stringify(ejercicio);
                    option.textContent = ejercicio.nombre;
                    nuevoSelect.appendChild(option);
                }
            });

            // Agregar listener para mostrar detalles del ejercicio seleccionado
            nuevoSelect.addEventListener('change', function () {
                const ejercicio = JSON.parse(this.value);
                const detalleHtml = `
                        <div>
                            <label>Descripción:</label>
                            <input type="text" value="${ejercicio.descripcion}" readonly><br>
                            <label>Grupo Muscular:</label>
                            <input type="text" value="${ejercicio.grupoMuscular}" readonly><br>
                            <label>Tipo de Ejercicio:</label>
                            <input type="text" value="${ejercicio.tipoEjercicio}" readonly><br>
                        </div>
                    `;
                // Agregar los detalles debajo del select correspondiente
                detallesDiv.innerHTML = detalleHtml;

                // Actualizar el array de ejercicios seleccionados
                ejerciciosSeleccionados.push(ejercicio);
                document.getElementById('ejercicios-input').value = JSON.stringify(ejerciciosSeleccionados);

                // Deshabilitar la opción seleccionada en otros selects
                actualizarOpcionesDisponibles();
            });

            // Crear un div para los detalles del ejercicio seleccionado
            const detallesDiv = document.createElement('div');
            detallesDiv.classList.add('detalle-ejercicio');

            // Crear botón para eliminar la selección
            const eliminarBtn = document.createElement('button');
            eliminarBtn.type = 'button';
            eliminarBtn.textContent = 'Eliminar ejercicio';
            eliminarBtn.addEventListener('click', function () {
                // Eliminar el contenedor del ejercicio
                ejerciciosSeleccionadosDiv.removeChild(contenedorEjercicio);
                // Actualizar el array de ejercicios seleccionados
                const index = ejerciciosSeleccionados.findIndex(e => e.idEjercicio === JSON.parse(nuevoSelect.value).idEjercicio);
                if (index > -1) {
                    ejerciciosSeleccionados.splice(index, 1);
                }
                document.getElementById('ejercicios-input').value = JSON.stringify(ejerciciosSeleccionados);
                // Actualizar las opciones disponibles en los selects restantes
                actualizarOpcionesDisponibles();
            });

            // Añadir el select, los detalles y el botón de eliminar al contenedor del ejercicio
            contenedorEjercicio.appendChild(nuevoSelect);
            contenedorEjercicio.appendChild(detallesDiv);
            contenedorEjercicio.appendChild(eliminarBtn);

            // Añadir el contenedor del ejercicio al formulario
            ejerciciosSeleccionadosDiv.appendChild(contenedorEjercicio);
        }

        function actualizarOpcionesDisponibles() {
            const selects = document.querySelectorAll('#ejercicios-seleccionados select');
            selects.forEach(select => {
                const opciones = select.querySelectorAll('option');
                opciones.forEach(option => {
                    const ejercicio = JSON.parse(option.value || null);
                    if (ejercicio) {
                        option.disabled = ejerciciosSeleccionados.some(e => e.idEjercicio === ejercicio.idEjercicio);
                    }
                });
            });
        }
    });
</script>
    </div>
</body>
</html>